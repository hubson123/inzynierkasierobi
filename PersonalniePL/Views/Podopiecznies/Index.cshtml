@model PagedList.IPagedList<PersonalniePL.Models.Podopieczny>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}

<h2>Podopieczni</h2>
@using (Html.BeginForm("Index", "Podopiecznies", FormMethod.Get))
{
<p>
    Szukaj po nazwisku: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
    @Html.Hidden("UserName",User.Identity.Name )
    <input type="submit" value="Search" />

</p>
}
<table class="table">
    <tr>
        <th>
            Nazwa użytkownika
        </th>
        <th>
            @Html.ActionLink("Sortuj po imieniu", "Index", new { sortOrder = ViewBag.ImieSortParm , UserName = User.Identity.Name })
        </th>
        <th>
            Nazwisko
        </th>
        <th>
            Wiek
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Imie)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nazwisko)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Wiek)
            </td>
            <td>
                <div class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        Opcje <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        <li>@Html.ActionLink("Prześlij plan", "Create", "Plans", new { id = item.ID }, "") |</li>
                        <li>@Html.ActionLink("Rozpisz plan na platformie", "Create", "PlanKreators", new { id = item.ID }, "") |</li>
                        <li> @Html.ActionLink("Zakoncz wspolprace", "Delete", new { id = item.ID })</li></ul></div>
</td>
        </tr>
    }

</table>
<br />
Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) z @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
